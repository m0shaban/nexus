#!/usr/bin/env node

import { createClient } from '@supabase/supabase-js';

console.log('๐ ุชุญููู ูุงุนุฏุฉ ุงูุจูุงูุงุช ุงูุญุงููุฉ...');

const supabaseUrl = 'https://mtsgkpgbdzgqrcqitayq.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im10c2drcGdiZHpncXJjcWl0YXlxIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0OTg2MTQxNywiZXhwIjoyMDY1NDM3NDE3fQ.koF7RkRFiP-Pq9L7EXQn1Nz_xzybJXRUywLUgr7yM4c';

const supabase = createClient(supabaseUrl, supabaseKey);

// ุงูุฌุฏุงูู ุงููุชููุนุฉ ูู ุงููุฎุทุท
const expectedTables = [
  // ุงููุณุชุฎุฏููู ูุงูุฃูุงู
  'users', 'user_preferences', 'user_sessions', 'user_activity_log', 'user_achievements',
  
  // ุงูููุงุญุธุงุช
  'notes', 'note_tags', 'note_tag_assignments', 'note_comments', 'note_files', 'note_analysis_history',
  
  // ุงููุดุงุฑูุน ูุงูููุงู
  'projects', 'project_collaborators', 'project_files', 'project_tags', 'project_activities',
  'tasks', 'task_comments', 'task_dependencies', 'task_attachments',
  
  // ุงูู Streaks
  'streaks', 'streak_activities', 'streak_milestones', 'streak_reminders', 'streak_rewards',
  
  // ุงูุณููุงุฑูููุงุช
  'scenarios', 'scenario_variables', 'scenario_assumptions', 'scenario_actions', 'scenario_outputs',
  
  // Mirror (ุงูุชุฃูู ุงูุฐุงุชู)
  'mirror_entries', 'mirror_goals', 'mirror_insights',
  
  // ุงูุดุนุงุฑุงุช (Logos)
  'logos', 'logo_categories', 'logo_variations',
  'logos_conversations', 'logos_messages', 'logos_analysis_sessions', 'logos_user_preferences'
];

async function analyzeDatabase() {
  try {
    // ุงูุญุตูู ุนูู ูุงุฆูุฉ ุงูุฌุฏุงูู ุงูููุฌูุฏุฉ
    const { data, error } = await supabase
      .rpc('get_table_names');
      
    if (error) {
      // ุทุฑููุฉ ุจุฏููุฉ ููุญุตูู ุนูู ุงูุฌุฏุงูู
      console.log('๐ ุงุณุชุฎุฏุงู ุทุฑููุฉ ุจุฏููุฉ ููุญุต ุงูุฌุฏุงูู...');
      
      const results = [];
      for (const table of expectedTables) {
        try {
          const { data: testData, error: testError } = await supabase
            .from(table)
            .select('*')
            .limit(1);
            
          if (!testError) {
            results.push({ table, exists: true, count: testData?.length || 0 });
          } else {
            results.push({ table, exists: false, error: testError.message });
          }
        } catch (err) {
          results.push({ table, exists: false, error: err.message });
        }
      }
      
      console.log('\n๐ ุชุญููู ุงูุฌุฏุงูู:');
      const existingTables = [];
      const missingTables = [];
      
      results.forEach(result => {
        if (result.exists) {
          existingTables.push(result.table);
          console.log(`โ ${result.table}`);
        } else {
          missingTables.push(result.table);
          console.log(`โ ${result.table} - ${result.error}`);
        }
      });
      
      console.log(`\n๐ ุงูุฅุญุตุงุฆูุงุช:`);
      console.log(`โ ุฌุฏุงูู ููุฌูุฏุฉ: ${existingTables.length}`);
      console.log(`โ ุฌุฏุงูู ููููุฏุฉ: ${missingTables.length}`);
      console.log(`๐ ุงููุณุจุฉ: ${((existingTables.length / expectedTables.length) * 100).toFixed(1)}%`);
      
      if (missingTables.length > 0) {
        console.log(`\n๐ง ุงูุฌุฏุงูู ุงูููููุฏุฉ ุงูุชู ุชุญุชุงุฌ ุฅูุดุงุก:`);
        missingTables.forEach(table => {
          console.log(`  - ${table}`);
        });
        
        // ุชุตููู ุงูุฌุฏุงูู ุงูููููุฏุฉ ุญุณุจ ุงููุญุฏุฉ
        const moduleCategories = {
          'ูุธุงู ุงูุดุนุงุฑุงุช (Logos)': missingTables.filter(t => t.startsWith('logos')),
          'ูุธุงู ุงูุชุฃูู (Mirror)': missingTables.filter(t => t.startsWith('mirror')),
          'ูุธุงู ุงูุณููุงุฑูููุงุช': missingTables.filter(t => t.startsWith('scenario')),
          'ูุธุงู ุงูู Streaks': missingTables.filter(t => t.startsWith('streak')),
          'ุฃุฎุฑู': missingTables.filter(t => !t.startsWith('logos') && !t.startsWith('mirror') && !t.startsWith('scenario') && !t.startsWith('streak'))
        };
        
        console.log(`\n๐๏ธ ุชุตููู ุงูุฌุฏุงูู ุงูููููุฏุฉ:`);
        Object.entries(moduleCategories).forEach(([category, tables]) => {
          if (tables.length > 0) {
            console.log(`\n${category}:`);
            tables.forEach(table => console.log(`  โข ${table}`));
          }
        });
      } else {
        console.log(`\n๐ ููุชุงุฒ! ุฌููุน ุงูุฌุฏุงูู ุงููุชููุนุฉ ููุฌูุฏุฉ.`);
      }
      
      return { existingTables, missingTables };
      
    } else {
      console.log('โ ุชู ุงูุญุตูู ุนูู ูุงุฆูุฉ ุงูุฌุฏุงูู ุจูุฌุงุญ');
      console.log('๐ ุงูุฌุฏุงูู ุงูููุฌูุฏุฉ:', data);
    }
    
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุชุญููู ูุงุนุฏุฉ ุงูุจูุงูุงุช:', error);
  }
}

// ุชุดุบูู ุงูุชุญููู
analyzeDatabase().then((result) => {
  if (result && result.missingTables.length > 0) {
    console.log(`\n๐ก ุชูุตูุงุช:`);
    console.log(`1. ุฅูุดุงุก ุงูุฌุฏุงูู ุงูููููุฏุฉ ุญุณุจ ุงูุฃููููุฉ`);
    console.log(`2. ุงูุชุฃูุฏ ูู ุตุญุฉ ุงูุนูุงูุงุช ุจูู ุงูุฌุฏุงูู`);
    console.log(`3. ุฅุถุงูุฉ ููุงุฑุณ ููุจุญุซ ุงูุณุฑูุน`);
    console.log(`4. ุชุญุฏูุซ ุงููุฎุทุท ุงูุฃููู (RLS)`);
  } else {
    console.log(`\n๐ฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช ููุชููุฉ ูุฌุงูุฒุฉ ููุงุณุชุฎุฏุงู!`);
  }
  
  console.log('\n๐ ุงูุชูู ุงูุชุญููู');
});
